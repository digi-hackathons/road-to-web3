{
  "address": "0x6Ce9B754deD085838DC4Df3093fA48c8e601A6CF",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "get_images_dir_cid",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "set_metadata_cid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6e9b4d757548351a619b1844a1dd0d1c9526012ad4ee25fa44b304b7617e9aef",
  "receipt": {
    "to": null,
    "from": "0x62238d3F47255bc5E39D9cB9155E3D49dBd904c9",
    "contractAddress": "0x6Ce9B754deD085838DC4Df3093fA48c8e601A6CF",
    "transactionIndex": 21,
    "gasUsed": "421391",
    "logsBloom": "0x
    "blockHash": "0x79e18998f1629d0b858da40a537eba7c730957ae355f5b1802b89968be5384e8",
    "transactionHash": "0x6e9b4d757548351a619b1844a1dd0d1c9526012ad4ee25fa44b304b7617e9aef",
    "logs": [
      {
        "transactionIndex": 21,
        "blockNumber": 24668266,
        "transactionHash": "0x6e9b4d757548351a619b1844a1dd0d1c9526012ad4ee25fa44b304b7617e9aef",
        "address": "0x6Ce9B754deD085838DC4Df3093fA48c8e601A6CF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000062238d3f47255bc5e39d9cb9155e3d49dbd904c9"
        ],
        "data": "0x",
        "logIndex": 66,
        "blockHash": "0x79e18998f1629d0b858da40a537eba7c730957ae355f5b1802b89968be5384e8"
      },
      {
        "transactionIndex": 21,
        "blockNumber": 24668266,
        "transactionHash": "0x6e9b4d757548351a619b1844a1dd0d1c9526012ad4ee25fa44b304b7617e9aef",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000062238d3f47255bc5e39d9cb9155e3d49dbd904c9",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000001a59402b3b86a0000000000000000000000000000000000000000000000002994cae735f9290000000000000000000000000000000000000000000000065894fb732f4b3e40b3000000000000000000000000000000000000000000000000299325533345709600000000000000000000000000000000000000000000065894fd18c34df1f91d",
        "logIndex": 67,
        "blockHash": "0x79e18998f1629d0b858da40a537eba7c730957ae355f5b1802b89968be5384e8"
      }
    ],
    "blockNumber": 24668266,
    "cumulativeGasUsed": "5474294",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "c05ecd5ff61b1edc0e5e3e650a6a6164",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"get_images_dir_cid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"set_metadata_cid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LingoStorage.sol\":\"LingoStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LingoStorage.sol\":{\"content\":\"// SPDX-License-Identifier: GPLv3\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract LingoStorage is Ownable {\\r\\n\\r\\n    string images_dir_cid = \\\"QmRqcTyPLu2PCfAwQEZN121myWEYpb5E5udKLygBYYUVVL\\\";\\r\\n\\r\\n    function set_metadata_cid(string calldata cid) public onlyOwner () {\\r\\n        images_dir_cid = cid;\\r\\n    }\\r\\n\\r\\n    function get_images_dir_cid() public view returns (string memory) {\\r\\n        return images_dir_cid;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc9ebb8d131a1446c87583367d131b1e38aa0da37499014efd2090996ed46c58c\",\"license\":\"GPLv3\"}},\"version\":1}",
  "bytecode": "0x60e0604052602e60808181529061065e60a039805161002691600191602090910190610092565b5034801561003357600080fd5b5061003d33610042565b610166565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461009e9061012b565b90600052602060002090601f0160209004810192826100c05760008555610106565b82601f106100d957805160ff1916838001178555610106565b82800160010185558215610106579182015b828111156101065782518255916020019190600101906100eb565b50610112929150610116565b5090565b5b808211156101125760008155600101610117565b600181811c9082168061013f57607f821691505b6020821081141561016057634e487b7160e01b600052602260045260246000fd5b50919050565b6104e9806101756000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780637d5c32e4146100665780638da5cb5b14610084578063b98af7a71461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b005b61006e610104565b60405161007b91906103f0565b60405180910390f35b6000546040516001600160a01b03909116815260200161007b565b6100646100ad366004610383565b610196565b6100646100c0366004610355565b6101d1565b6000546001600160a01b031633146100f85760405162461bcd60e51b81526004016100ef90610443565b60405180910390fd5b610102600061026c565b565b60606001805461011390610478565b80601f016020809104026020016040519081016040528092919081815260200182805461013f90610478565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b5050505050905090565b6000546001600160a01b031633146101c05760405162461bcd60e51b81526004016100ef90610443565b6101cc600183836102bc565b505050565b6000546001600160a01b031633146101fb5760405162461bcd60e51b81526004016100ef90610443565b6001600160a01b0381166102605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ef565b6102698161026c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546102c890610478565b90600052602060002090601f0160209004810192826102ea5760008555610330565b82601f106103035782800160ff19823516178555610330565b82800160010185558215610330579182015b82811115610330578235825591602001919060010190610315565b5061033c929150610340565b5090565b5b8082111561033c5760008155600101610341565b600060208284031215610366578081fd5b81356001600160a01b038116811461037c578182fd5b9392505050565b60008060208385031215610395578081fd5b823567ffffffffffffffff808211156103ac578283fd5b818501915085601f8301126103bf578283fd5b8135818111156103cd578384fd5b8660208285010111156103de578384fd5b60209290920196919550909350505050565b6000602080835283518082850152825b8181101561041c57858101830151858201604001528201610400565b8181111561042d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061048c57607f821691505b602082108114156104ad57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220327cb2e233fb254043b846447a53f46fa4cadb4ec9d28509955afb9b058a793a64736f6c63430008040033516d5271635479504c7532504366417751455a4e3132316d79574559706235453575644b4c79674259595556564c",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780637d5c32e4146100665780638da5cb5b14610084578063b98af7a71461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b005b61006e610104565b60405161007b91906103f0565b60405180910390f35b6000546040516001600160a01b03909116815260200161007b565b6100646100ad366004610383565b610196565b6100646100c0366004610355565b6101d1565b6000546001600160a01b031633146100f85760405162461bcd60e51b81526004016100ef90610443565b60405180910390fd5b610102600061026c565b565b60606001805461011390610478565b80601f016020809104026020016040519081016040528092919081815260200182805461013f90610478565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b5050505050905090565b6000546001600160a01b031633146101c05760405162461bcd60e51b81526004016100ef90610443565b6101cc600183836102bc565b505050565b6000546001600160a01b031633146101fb5760405162461bcd60e51b81526004016100ef90610443565b6001600160a01b0381166102605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ef565b6102698161026c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546102c890610478565b90600052602060002090601f0160209004810192826102ea5760008555610330565b82601f106103035782800160ff19823516178555610330565b82800160010185558215610330579182015b82811115610330578235825591602001919060010190610315565b5061033c929150610340565b5090565b5b8082111561033c5760008155600101610341565b600060208284031215610366578081fd5b81356001600160a01b038116811461037c578182fd5b9392505050565b60008060208385031215610395578081fd5b823567ffffffffffffffff808211156103ac578283fd5b818501915085601f8301126103bf578283fd5b8135818111156103cd578384fd5b8660208285010111156103de578384fd5b60209290920196919550909350505050565b6000602080835283518082850152825b8181101561041c57858101830151858201604001528201610400565b8181111561042d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061048c57607f821691505b602082108114156104ad57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220327cb2e233fb254043b846447a53f46fa4cadb4ec9d28509955afb9b058a793a64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/LingoStorage.sol:LingoStorage",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 733,
        "contract": "contracts/LingoStorage.sol:LingoStorage",
        "label": "images_dir_cid",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}